#!/bin/bash

# Script para verificar conex√£o com Redis

echo "üîç Verificando conex√£o com Redis..."

# Verifica se o .env existe
if [ ! -f .env ]; then
    echo "‚ùå Arquivo .env n√£o encontrado!"
    echo "Execute ./scripts/setup-env.sh primeiro"
    exit 1
fi

# Carrega vari√°veis do .env
source .env

echo "üìù Configura√ß√£o detectada:"
echo "   REDIS_URL: ${REDIS_URL:0:20}..."

# Teste de conex√£o Node.js
echo ""
echo "üîó Testando conex√£o com Redis..."

node -e "
const redis = require('redis');
const url = process.env.REDIS_URL;

async function testConnection() {
    try {
        console.log('‚è≥ Conectando ao Redis...');
        const client = redis.createClient({
            url: url,
            socket: {
                connectTimeout: 5000,
                commandTimeout: 3000
            },
            retryDelayOnFailover: 100,
            enableReadyCheck: false,
            maxRetriesPerRequest: null
        });

        client.on('error', (err) => {
            console.log('‚ùå Erro de conex√£o:', err.message);
        });

        await client.connect();
        console.log('‚úÖ Conex√£o estabelecida com sucesso!');
        
        // Teste b√°sico
        await client.set('test:connection', 'ok', { EX: 10 });
        const result = await client.get('test:connection');
        
        if (result === 'ok') {
            console.log('‚úÖ Teste de leitura/escrita OK!');
        } else {
            console.log('‚ö†Ô∏è  Problema no teste de leitura/escrita');
        }
        
        await client.del('test:connection');
        await client.disconnect();
        console.log('üéâ Redis configurado corretamente!');
        
    } catch (error) {
        console.log('‚ùå Erro na conex√£o:', error.message);
        process.exit(1);
    }
}

testConnection();
"