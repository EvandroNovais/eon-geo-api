#!/bin/bash

echo "üîç Escaneando credenciais antes do commit..."

# Patterns que indicam credenciais expostas
PATTERNS=(
    "redis://default:[^@]+@redis-[0-9]+"           # Redis Cloud URLs
    "AIza[0-9A-Za-z_-]{35}"                       # Google API Keys
    "sk-[0-9A-Za-z]{48}"                          # OpenAI API Keys
    "aws_access_key_id.*=.*[A-Z0-9]{20}"          # AWS Access Keys
    "aws_secret_access_key.*=.*[A-Za-z0-9/+=]{40}" # AWS Secret Keys
    "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}" # UUIDs que podem ser secrets
    "password.*=.*[^\s]{8,}"                       # Passwords
    "token.*=.*[A-Za-z0-9]{16,}"                  # Tokens
    "secret.*=.*[A-Za-z0-9]{16,}"                 # Secrets
)

# Arquivos que devem ser ignorados na verifica√ß√£o
IGNORE_FILES=(
    ".githooks/pre-commit"
    "scripts/security-check.sh"
    "SECURITY.md"
)

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

found_credentials=0

# Verificar arquivos que ser√£o commitados
for file in $(git diff --cached --name-only); do
    # Pular arquivos na lista de ignorados
    skip=false
    for ignore_file in "${IGNORE_FILES[@]}"; do
        if [[ "$file" == "$ignore_file" ]]; then
            skip=true
            break
        fi
    done
    
    if [[ "$skip" == true ]]; then
        continue
    fi
    
    # Verificar se o arquivo existe (n√£o foi deletado)
    if [[ ! -f "$file" ]]; then
        continue
    fi
    
    echo "üìÅ Verificando: $file"
    
    # Verificar cada pattern
    for pattern in "${PATTERNS[@]}"; do
        matches=$(git show ":$file" | grep -n -E "$pattern" || true)
        if [[ -n "$matches" ]]; then
            echo -e "${RED}‚ùå CREDENCIAL DETECTADA em $file:${NC}"
            echo -e "${YELLOW}Pattern: $pattern${NC}"
            echo -e "${YELLOW}Matches:${NC}"
            echo "$matches"
            echo ""
            found_credentials=1
        fi
    done
done

if [[ $found_credentials -eq 1 ]]; then
    echo -e "${RED}üö´ COMMIT BLOQUEADO! Credenciais detectadas.${NC}"
    echo -e "${YELLOW}üìã A√ß√µes necess√°rias:${NC}"
    echo "1. Remover credenciais reais dos arquivos"
    echo "2. Usar placeholders (YOUR_PASSWORD, YOUR_API_KEY)"
    echo "3. Configurar credenciais via vari√°veis de ambiente"
    echo "4. Verificar se .env est√° no .gitignore"
    echo ""
    echo -e "${GREEN}üí° Dica: Use 'git commit --no-verify' apenas se tiver certeza${NC}"
    exit 1
else
    echo -e "${GREEN}‚úÖ Nenhuma credencial detectada. Commit permitido.${NC}"
    exit 0
fi